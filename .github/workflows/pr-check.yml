name: Pull Request Check

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - 'field-service-app/**'
      - '.github/workflows/**'

env:
  JAVA_VERSION: '17'
  NODE_VERSION: '18'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      frontend-changed: ${{ steps.changes.outputs.frontend }}
      backend-changed: ${{ steps.changes.outputs.backend }}
      work-order-changed: ${{ steps.changes.outputs.work-order }}
      technician-changed: ${{ steps.changes.outputs.technician }}
      schedule-changed: ${{ steps.changes.outputs.schedule }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Detect changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            frontend:
              - 'field-service-app/**'
            backend:
              - 'backend/**'
            work-order:
              - 'backend/work-order-service/**'
              - 'backend/pom.xml'
            technician:
              - 'backend/technician-service/**'
              - 'backend/pom.xml'
            schedule:
              - 'backend/schedule-service/**'
              - 'backend/pom.xml'

  lint-and-test-frontend:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.frontend-changed == 'true' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: ./field-service-app
        run: npm ci

      - name: Lint code
        working-directory: ./field-service-app
        run: |
          npm run lint --if-present || echo "No lint script found"

      - name: Type check
        working-directory: ./field-service-app
        run: npx tsc --noEmit

      - name: Run tests
        working-directory: ./field-service-app
        run: npm test -- --coverage --watchAll=false

      - name: Build application
        working-directory: ./field-service-app
        run: npm run build

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          directory: ./field-service-app/coverage
          flags: frontend
          fail_ci_if_error: false

  test-backend-services:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.backend-changed == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [work-order-service, technician-service, schedule-service]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: maven

      - name: Run tests for ${{ matrix.service }}
        working-directory: ./backend
        run: |
          mvn clean test -pl ${{ matrix.service }} -am

      - name: Build ${{ matrix.service }}
        working-directory: ./backend
        run: |
          mvn clean package -pl ${{ matrix.service }} -am -DskipTests

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.service }}
          path: backend/${{ matrix.service }}/target/surefire-reports/
          retention-days: 3

  integration-test:
    needs: [detect-changes, test-backend-services]
    if: ${{ needs.detect-changes.outputs.backend-changed == 'true' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: maven

      - name: Build all services
        working-directory: ./backend
        run: |
          mvn clean package -DskipTests

      - name: Start services for integration test
        working-directory: ./backend
        run: |
          # Start services in background for integration testing
          echo "Starting services for integration testing..."
          
          # Example: Start services (you would add actual startup commands here)
          # java -jar work-order-service/target/work-order-service-*.jar --server.port=8081 &
          # java -jar technician-service/target/technician-service-*.jar --server.port=8082 &
          # java -jar schedule-service/target/schedule-service-*.jar --server.port=8083 &
          
          # Wait for services to start
          sleep 10

      - name: Run integration tests
        run: |
          echo "Running integration tests..."
          # Add your integration test commands here
          # Example: newman run postman-collection.json
          # Example: curl -f http://localhost:8081/health
          echo "✅ Integration tests completed"

  code-quality:
    needs: detect-changes
    if: ${{ always() }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run SonarCloud Scan
        if: ${{ needs.detect-changes.outputs.frontend-changed == 'true' || needs.detect-changes.outputs.backend-changed == 'true' }}
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Uncomment and add token to secrets
        continue-on-error: true

      - name: Run Trivy security scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
        continue-on-error: true

  pr-summary:
    needs: [detect-changes, lint-and-test-frontend, test-backend-services, integration-test, code-quality]
    if: always()
    runs-on: ubuntu-latest
    
    steps:
      - name: PR Summary Comment
        uses: actions/github-script@v6
        with:
          script: |
            const results = {
              frontend: '${{ needs.lint-and-test-frontend.result }}',
              backend: '${{ needs.test-backend-services.result }}',
              integration: '${{ needs.integration-test.result }}',
              quality: '${{ needs.code-quality.result }}'
            };
            
            const changes = {
              frontend: '${{ needs.detect-changes.outputs.frontend-changed }}',
              backend: '${{ needs.detect-changes.outputs.backend-changed }}',
              workOrder: '${{ needs.detect-changes.outputs.work-order-changed }}',
              technician: '${{ needs.detect-changes.outputs.technician-changed }}',
              schedule: '${{ needs.detect-changes.outputs.schedule-changed }}'
            };
            
            let summary = '## 🔍 PR Check Summary\n\n';
            
            summary += '### 📁 Changed Components\n';
            if (changes.frontend === 'true') summary += '- ✅ Frontend (React App)\n';
            if (changes.workOrder === 'true') summary += '- ✅ Work Order Service\n';
            if (changes.technician === 'true') summary += '- ✅ Technician Service\n';
            if (changes.schedule === 'true') summary += '- ✅ Schedule Service\n';
            
            summary += '\n### 🧪 Test Results\n';
            if (changes.frontend === 'true') {
              const icon = results.frontend === 'success' ? '✅' : '❌';
              summary += `- ${icon} Frontend Tests\n`;
            }
            if (changes.backend === 'true') {
              const icon = results.backend === 'success' ? '✅' : '❌';
              summary += `- ${icon} Backend Services Tests\n`;
              
              const integrationIcon = results.integration === 'success' ? '✅' : '❌';
              summary += `- ${integrationIcon} Integration Tests\n`;
            }
            
            const qualityIcon = results.quality === 'success' ? '✅' : '⚠️';
            summary += `- ${qualityIcon} Code Quality Check\n`;
            
            const allPassed = Object.values(results).every(r => r === 'success' || r === 'skipped');
            summary += `\n### 🎯 Overall Status: ${allPassed ? '✅ Ready to Merge' : '❌ Needs Attention'}`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });